@model AccountSecurityViewModel

@inject SignInManager<UserEntity> _signInManager
@inject UserManager<UserEntity> _userManager

@{
    var user = await _signInManager.UserManager.GetUserAsync(User);
    var ProfileImageUrl = user != null ? user.ProfileImageUrl : null;
}

@{
    ViewData["Title"] = $"{Model.BasicInfoForm?.FirstName} {Model.BasicInfoForm?.LastName}'s profile";
}

<div class="container">
    <section id="account-security">
        <aside>
            <div class="profile-info">
                <div class=" profile-info-img">
                    @* <img src="~/images/@Model.ProfileInfo.ProfileImageUrl" alt="@Model.ProfileInfo.FirstName @Model.ProfileInfo.LastName" /> *@
                    <img src="~/images/uploads/profiles/@user.ProfileImageUrl" alt="@Model.ProfileInfo.FirstName @Model.ProfileInfo.LastName" />
                    <form enctype="multipart/form-data" method="post" asp-action="UploadProfilImage" asp-controller="Account">
                        <input id="fileUploader" type="file" name="file" hidden />
                        <label for="fileUploader" class="btn btn-circle btn-circle-sm">
                            <i class="fa-light fa-refresh"></i>
                        </label>
                    </form>

                </div>
                <h5>@Model.BasicInfoForm?.FirstName @Model.BasicInfoForm?.LastName</h5>
                <p>@Model.BasicInfoForm?.Email</p>
            </div>

            <nav>
                <a class="btn-transparent" asp-controller="Account" asp-action="Details"><i class="fa-light fa-gear"></i>Account Details</a>
                <a class="btn-theme-s" asp-controller="Account" asp-action="Security"><i class="fa-sharp fa-regular fa-lock"></i>Security</a>
                <a class="btn-transparent" asp-controller="Account" asp-action="GetSavedCourses"><i class="fa-light fa-bookmark"></i>Saved Courses</a>
                <a class="btn-transparent" asp-controller="Auth" asp-action="SignOut"><i class="fa-light fa-arrow-right-from-bracket"></i>Sign Out</a>


            </nav>
        </aside>

        <div class="security">
            <section class="security-info">
                @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"]?.ToString()))
                {
                    <span class="alert alert-danger">
                        @ViewData["ErrorMessage"]
                    </span>
                }

                @if (!string.IsNullOrEmpty(ViewData["SuccessMessage"]?.ToString()))
                {
                    <span class="alert alert-success">
                        @ViewData["SuccessMessage"]
                    </span>
                }

                <form id="securityPasswordForm" method="post" asp-controller="Account" asp-action="Security" novalidate>
                    <h2>Security</h2>
                    <h5>Password</h5>

                    <div class="content">
                        <div id="current-password" class="input-group">
                            <label asp-for="SecurityPasswordForm.CurrentPassword"></label>
                            <span asp-validation-for="SecurityPasswordForm.CurrentPassword"></span>
                            <input asp-for="SecurityPasswordForm.CurrentPassword" />
                        </div>

                        <div id="new-password" class="input-group">
                            <label asp-for="SecurityPasswordForm.NewPassword"></label>
                            <span asp-validation-for="SecurityPasswordForm.NewPassword"></span>
                            <input asp-for="SecurityPasswordForm.NewPassword" />
                        </div>

                        <div id="confirm-new-password" class="input-group">
                            <label asp-for="SecurityPasswordForm.ConfirmNewPassword"></label>
                            <span asp-validation-for="SecurityPasswordForm.ConfirmNewPassword"></span>
                            <input asp-for="SecurityPasswordForm.ConfirmNewPassword" />
     
                        </div>

                        <div class="form-buttons">
                            <button class="btn-gray" type="reset">Cancel</button>
                            <button class="btn-theme" type="submit">Change password</button>
                        </div>
                    </div>
                </form>
            </section>
            <hr />
            <section class="delete-account">

                <form method="post" asp-controller="Account" asp-action="DeleteAccount" novalidate>
                    <h5>Delete account</h5>
                    <p>When you delete your account, your public profile will be deactivated immediately. If you change your mind before the 14 days are up, sign in with your email and password, and we’ll send you a link to reactivate your account.</p>
                    
                    <div class="content">
                        <div id="form-terms" class="checkbox">
                            <div class="checkbox-group">
                                <input asp-for="SecurityDeleteForm.IsDeleted" />
                                <label asp-for="SecurityDeleteForm.IsDeleted">Yes, I want to delete my account.</label>
                            </div>

                            <span asp-validation-for="SecurityDeleteForm.IsDeleted"> </span>
                        </div>
                    </div>

                    <div class="form-buttons">
                        <button class="btn-delete" type="submit">Delete</button>
                    </div>
                </form>

@*                  @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"]?.ToString()))
            {
                <span class="alert alert-danger">
                    @TempData["ErrorMessage"]
                </span>
            }

            @if (!string.IsNullOrEmpty(ViewData["SuccessMessage"]?.ToString()))
            {
                <span class="alert alert-success">
                    @TempData["SuccessMessage"]
                </span>
            } *@

            </section>
        </div>
    </section>
</div>
